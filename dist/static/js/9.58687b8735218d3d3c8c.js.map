{"version":3,"sources":["webpack:///./node_modules/dom7/node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///src/components/home1.vue","webpack:///./src/components/home1.vue?abfa","webpack:///./src/components/home1.vue"],"names":["isObject","obj","constructor","Object","extend","target","src","keys","forEach","key","length","doc","document","ssrDocument","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","win","window","navigator","userAgent","history","replaceState","pushState","go","back","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","Dom7","[object Object]","arr","self","i","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","ssr_window_esm_doc","ssr_window_esm_win","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","methodName","Utils","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","paramsPart","decodeURIComponent","o","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","swiper_esm_bundle_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","swiper_esm_bundle_Browser","isIE","isEdge","isSafari","ua","toLowerCase","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","Array","isArray","slice","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","initialized","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","swiper_esm_bundle_transition","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","autoplay","running","paused","run","defaults","init","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","stopIndex","groupSize","ratio","onClick","stopImmediatePropagation","start","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","clientX","clientY","dragStartPos","positionRatio","getPointerPosition","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","hashNavigation","paths","getPathValues","scrollToSlide","setHistoryPopState","pathArray","part","slugify","includes","currentState","state","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","isHidden","number","render","get","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","swiper_esm_bundle","home1","created","getData","destory","console","log","dataList","recommendList","songList","menuList","swiperOption","songCont","playSong","nowDete","newSongList","musicList","methods","_this","D","nowDate","getDate","getBannerPost","getNewSong","$axios","then","re","result","$nextTick","scroll","core_esm","$refs","Mbox","_this2","res","_this3","banners","catch","err","jumpArtists","components_home1","_vm","_h","$createElement","_c","_self","staticClass","$store","zColor","id","ref","_v","_l","item","imageUrl","slot","album","blurPicUrl","_m","$event","openSongList","picUrl","staticStyle","_s","playCount","directives","rawName","expression","song","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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AAAtlB,cAEA7P,SACAV,KACA61B,UAAAtlB,cAEA7P,iBACAV,KACA61B,UAAAtlB,cAEA7P,eACAV,KACA61B,UAAAlc,gBAEAjZ,cAAAsD,GACAhE,KACA61B,UAAAvf,cAAAtS,IAEAtD,UACAV,KACA61B,UAAA5I,cAuFAjd,KAAA,WACApE,QACAksB,UACApmB,SAAA,IAGAhR,SAEA0J,EAAApN,OADAgD,MAEA83B,UACAC,aAAAL,EAAAK,aAAApoB,KAHA3P,MAIA2Z,aAAA+d,EAAA/d,aAAAhK,KAJA3P,MAKAsW,cAAAohB,EAAAphB,cAAA3G,KALA3P,UASAmE,IACAzD,aACAV,KACA4L,OAAAksB,SAAApmB,UADA1R,KAEA4L,OAAAmK,qBAAA,EAFA/V,KAGA2nB,eAAA5R,qBAAA,IAEArV,OACAV,KACA4L,OAAAksB,SAAApmB,SADA1R,KAEA83B,SAAAne,gBAEAjZ,eACAV,KACA4L,OAAAksB,SAAApmB,SADA1R,KAEA83B,SAAAne,gBAEAjZ,cAAAsD,GACAhE,KACA4L,OAAAksB,SAAApmB,SADA1R,KAEA83B,SAAAxhB,cAAAtS,OAmaAgM,KAAA,OACApE,QACA4sB,MACA9mB,SAAA,EACAunB,SAAA,EACAG,SAAA,EACAr2B,QAAA,EACAi2B,eAAA,wBACAuC,iBAAA,wBAGA76B,SACA,MAAA8P,EAAAxQ,KACAw4B,GACA9mB,SAAA,EACAijB,MAAA,EACAkD,aAAA,EACAqB,WAAA,EACAT,SACAlK,cAAAppB,EACAo0B,gBAAAp0B,EACAq0B,iBAAAr0B,EACA2zB,cAAA3zB,EACA4zB,kBAAA5zB,EACA8zB,SAAA,GAEAhQ,OACA7F,eAAAje,EACAke,aAAAle,EACAoe,cAAApe,EACAue,cAAAve,EACAw0B,UAAAx0B,EACA00B,UAAA10B,EACAy0B,UAAAz0B,EACA20B,UAAA30B,EACAsL,WAAAtL,EACAuL,YAAAvL,EACAye,YAAAze,EACA0e,YAAA1e,EACAm0B,gBACAS,mBAEA7T,UACApM,OAAA3U,EACA4U,OAAA5U,EACA60B,mBAAA70B,EACA80B,mBAAA90B,EA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","file":"static/js/9.58687b8735218d3d3c8c.js","sourcesContent":["/**\n * SSR Window 2.0.0\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2020, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: May 12, 2020\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target, src) {\n    if (target === void 0) { target = {}; }\n    if (src === void 0) { src = {}; }\n    Object.keys(src).forEach(function (key) {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nvar doc = typeof document !== 'undefined' ? document : {};\nvar ssrDocument = {\n    body: {},\n    addEventListener: function () { },\n    removeEventListener: function () { },\n    activeElement: {\n        blur: function () { },\n        nodeName: '',\n    },\n    querySelector: function () {\n        return null;\n    },\n    querySelectorAll: function () {\n        return [];\n    },\n    getElementById: function () {\n        return null;\n    },\n    createEvent: function () {\n        return {\n            initEvent: function () { },\n        };\n    },\n    createElement: function () {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute: function () { },\n            getElementsByTagName: function () {\n                return [];\n            },\n        };\n    },\n    createElementNS: function () {\n        return {};\n    },\n    importNode: function () {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nextend(doc, ssrDocument);\n\nvar win = typeof window !== 'undefined' ? window : {};\nvar ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState: function () { },\n        pushState: function () { },\n        go: function () { },\n        back: function () { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener: function () { },\n    removeEventListener: function () { },\n    getComputedStyle: function () {\n        return {\n            getPropertyValue: function () {\n                return '';\n            },\n        };\n    },\n    Image: function () { },\n    Date: function () { },\n    screen: {},\n    setTimeout: function () { },\n    clearTimeout: function () { },\n    matchMedia: function () {\n        return {};\n    },\n};\nextend(win, ssrWindow);\n\nexport { doc as document, extend, win as window };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.1.5\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2020, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: May 15, 2020\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Swiper 4.5.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: September 13, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map((a) => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter((paramsPart) => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach((m) => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (\n        (params.slidesPerColumnFill === 'column')\n        || (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1)\n      ) {\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n        } else {\n          const groupIndex = Math.floor(i / params.slidesPerGroup);\n          row = Math.floor(i / params.slidesPerView) - groupIndex * params.slidesPerColumn;\n          column = i - row * params.slidesPerView - groupIndex * params.slidesPerView;\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box' && !Browser.isIE) {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box' && !Browser.isIE) {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\n                || (slideAfter > 1 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map((val) => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    swiper.$el\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection} wp8-${currentDirection}`)\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n    if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40) || kc === 34)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38) || kc === 33)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (((kc === 34 || kc === 39) && !rtl) || ((kc === 33 || kc === 37) && rtl)) swiper.slideNext();\n      if (((kc === 33 || kc === 37) && !rtl) || ((kc === 34 || kc === 39) && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 34 || kc === 40) swiper.slideNext();\n      if (kc === 33 || kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: (number) => number,\n      formatFractionTotal: (number) => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  getPointerPosition(e) {\n    const swiper = this;\n    if (swiper.isHorizontal()) {\n      return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    }\n    return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const {\n      $el,\n      dragSize,\n      trackSize,\n      dragStartPos,\n    } = scrollbar;\n\n    let positionRatio;\n    positionRatio = ((scrollbar.getPointerPosition(e)) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top']\n      - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    swiper.scrollbar.dragStartPos = (e.target === $dragEl[0] || e.target === $dragEl)\n      ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter((part) => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/dist/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = ","<template>\r\n  <div id=\"Mbox\" class=\"wrapper\" :style=\"{ background: $store.state.zColor }\">\r\n    <div class=\"recommend_content\" ref=\"Mbox\">\r\n      <div class=\"recommend-cont\">\r\n        <div class=\"hoom1box\">\r\n          <div\r\n            class=\"swiperBg\"\r\n            :style=\"{ background: $store.state.zColor }\"\r\n          ></div>\r\n          <swiper v-if=\"dataList\" :options=\"swiperOption\">\r\n            <swiper-slide v-for=\"(item, index) of dataList\" :key=\"index\">\r\n              <img class=\"lunbo\" :src=\"item.imageUrl\" />\r\n            </swiper-slide>\r\n            <div class=\"swiper-pagination\" slot=\"pagination\"></div>\r\n          </swiper>\r\n          <swiper v-else :options=\"swiperOption\">\r\n            <swiper-slide v-for=\"(item, index) of newSongList\" :key=\"index\">\r\n              <img class=\"lunbo bannerImg\" :src=\"item.album.blurPicUrl\" />\r\n            </swiper-slide>\r\n            <div class=\"swiper-pagination\" slot=\"pagination\"></div>\r\n          </swiper>\r\n        </div>\r\n        <!-- <div class=\"homeNav\">\r\n          <dir class=\"navBtn flex_cc\" @click=\"jumpArtists()\">\r\n            <img\r\n              src=\"../assets/img/rt.png\"\r\n              :style=\"{ background: $store.state.zColor }\"\r\n              alt=\"\"\r\n            />\r\n            <p class=\"nowDate\">薛之谦</p>\r\n          </dir>\r\n          <dir class=\"navBtn flex_cc\" @click=\"geto('everydayDaily')\">\r\n            <img\r\n              src=\"../assets/img/rt.png\"\r\n              :style=\"{ background: $store.state.zColor }\"\r\n              alt=\"\"\r\n            />\r\n            <p class=\"nowDate\">每日推荐</p>\r\n          </dir>\r\n          <dir class=\"navBtn flex_cc\" @click=\"geto('everydayDaily')\">\r\n            <img\r\n              src=\"../assets/img/rt.png\"\r\n              :style=\"{ background: $store.state.zColor }\"\r\n              alt=\"\"\r\n            />\r\n            <p class=\"nowDate\">电台</p>\r\n          </dir>\r\n          <dir class=\"navBtn flex_cc\" @click=\"geto('everydayDaily')\">\r\n            <img\r\n              src=\"../assets/img/rt.png\"\r\n              :style=\"{ background: $store.state.zColor }\"\r\n              alt=\"\"\r\n            />\r\n            <p class=\"nowDate\">私人FM</p>\r\n          </dir>\r\n          <dir class=\"navBtn flex_cc\" @click=\"geto('everydayDaily')\">\r\n            <img\r\n              src=\"../assets/img/rt.png\"\r\n              :style=\"{ background: $store.state.zColor }\"\r\n              alt=\"\"\r\n            />\r\n            <p class=\"nowDate\">排行榜</p>\r\n          </dir>\r\n          \r\n        </div> -->\r\n        <div class=\"m-body\">\r\n          <a class=\"m-title\" href=\"\"\r\n            >推荐歌单<i class=\"fa fa-angle-right\"></i\r\n          ></a>\r\n          <div\r\n            class=\"cellMusic\"\r\n            v-for=\"(item, index) of recommendList\"\r\n            :key=\"index\"\r\n            @click=\"openSongList(item.id)\"\r\n            :id=\"item.id\"\r\n          >\r\n            <img class=\"mImg\" :src=\"item.picUrl\" />\r\n            <div class=\"mImg-bg-icon\" style=\"top: 4px\">\r\n              <i class=\"fa fa-headphones\"></i>\r\n              {{ Math.round(item.playCount / 10000) }}万\r\n            </div>\r\n            <div class=\"mName\">{{ item.name }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <musicList\r\n      @playSong=\"playSong\"\r\n      :key=\"songCont\"\r\n      :song=\"songCont\"\r\n      v-show=\"songCont\"\r\n      ref=\"mySong\"\r\n    ></musicList>\r\n    <!-- :pass=\"songId\" -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Swiper from \"swiper\";\r\nimport BScroll from \"@better-scroll/core\";\r\nimport musicList from \"@/components/musicList\";\r\n\r\nexport default {\r\n  created() {\r\n    this.getData();\r\n    var mySwiper = new Swiper(\".swiper-container\", {\r\n      loop: true,\r\n      // 如果需要分页器\r\n      pagination: \".swiper-pagination\",\r\n    });\r\n  },\r\n  destory() {\r\n    console.log(\"destory\");\r\n  },\r\n  data() {\r\n    return {\r\n      dataList: [],\r\n      recommendList: [],\r\n      songList: [],\r\n      menuList: [\"每日推荐\", \"歌单\", \"排行榜\", \"电台\", \"私人FM\"],\r\n      swiperOption: {\r\n        pagination: {\r\n          el: \".swiper-pagination\",\r\n        },\r\n        autoplay: {\r\n          delay: 6000,\r\n          disableOnInteraction: false,\r\n        },\r\n      },\r\n      songCont: \"\",\r\n      playSong: \"\",\r\n      nowDete: \"\",\r\n      newSongList: null,\r\n    };\r\n  },\r\n  components: {\r\n    musicList: musicList,\r\n  },\r\n  methods: {\r\n    getData: function () {\r\n      let D = new Date();\r\n      this.nowDate = D.getDate();\r\n      this.getBannerPost();\r\n      this.getNewSong();\r\n\r\n      this.$axios.get(\"/personalized\").then((re) => {\r\n        this.recommendList = re.data.result;\r\n\r\n        this.$nextTick(() => {\r\n          //$refs绑定元素\r\n          if (!this.scroll) {\r\n            this.scroll = new BScroll(this.$refs.Mbox, {\r\n              click: true, //开启点击事件 默认为false\r\n            });\r\n          }\r\n        });\r\n      });\r\n    },\r\n    getNewSong() {\r\n      this.$axios.get(\"/top/song?type=7\").then((res) => {\r\n        res.data.data.length = 5;\r\n        this.newSongList = res.data.data;\r\n      });\r\n    },\r\n    getBannerPost() {\r\n      this.$axios\r\n        .get(\"/banner?type=0\")\r\n        .then((re) => {\r\n          this.dataList = re.data.banners;\r\n        })\r\n        .catch((err) => {\r\n          this.dataList = null;\r\n        });\r\n    },\r\n    jumpArtists() {},\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* ----------------------------------- */\r\n.bannerImg {\r\n  height: 136px;\r\n  object-fit: cover;\r\n  object-position: 0% 20%;\r\n}\r\n.mImg-bg-icon {\r\n  position: absolute;\r\n  width: 88.8%;\r\n  height: 30px;\r\n  background-image: linear-gradient(to top, #ffffff00 0%, #000000 200%);\r\n  margin: -4px 5.6%;\r\n  color: #fff;\r\n  text-align: right;\r\n  font-size: 12px;\r\n}\r\n.m-ctrl div {\r\n  font-size: 14px;\r\n}\r\n.m-body {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  background: #fff;\r\n}\r\n.m-title {\r\n  width: 40%;\r\n  margin-right: 60%;\r\n  height: 36px;\r\n  font-weight: bold;\r\n  color: #2c3e50;\r\n  text-align: left;\r\n  margin-left: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n}\r\n.m-title > i {\r\n  margin-left: 10px;\r\n}\r\n.lunbo {\r\n  width: 93vw;\r\n  border-radius: 4px;\r\n}\r\n.cellMusic {\r\n  width: 33.33vw;\r\n  height: 43vw;\r\n  position: relative;\r\n}\r\n.mImg {\r\n  width: 88.8%;\r\n  border-radius: 4px;\r\n}\r\n.mName {\r\n  font-size: 12px;\r\n  padding: 0 4px;\r\n  height: 35px;\r\n  overflow: hidden;\r\n}\r\n\r\n.hoom1box {\r\n  position: relative;\r\n  min-height: 130px;\r\n  background: #fff;\r\n}\r\n.swiperBg {\r\n  width: 100%;\r\n  height: 100px;\r\n  position: absolute;\r\n}\r\n.swiper-pagination-bullet-active {\r\n  opacity: 1;\r\n  background: #fd6c62;\r\n}\r\n.Tright-ctrl {\r\n  width: 44px;\r\n  height: 44px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: black;\r\n  float: right;\r\n  font-size: 18px;\r\n}\r\n.songListInfo {\r\n  display: flex;\r\n  padding: 54px 18px 0;\r\n  color: #fff;\r\n}\r\n.songListTop {\r\n  width: calc(100vw - 132px);\r\n  text-align: left;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n.SLT-top {\r\n  width: 100%;\r\n  height: 66.66%;\r\n}\r\n.SLT-bot {\r\n  width: 100%;\r\n  height: 33.33%;\r\n  font-size: 8px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  height: 16px;\r\n  white-space: nowrap;\r\n}\r\n.songListName {\r\n  padding: 10px 20px;\r\n  width: calc(100% - 136px);\r\n}\r\n.SLN-top {\r\n  text-align: left;\r\n  font-size: 16px;\r\n  height: 46px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n.SLN-bot {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 8px 0;\r\n}\r\n.SLN-bot > img {\r\n  width: 28px;\r\n  height: 28px;\r\n  border-radius: 50px;\r\n  margin-right: 10px;\r\n}\r\n.SLN-bot > div {\r\n  font-size: 10px;\r\n}\r\n\r\n.functionBtn {\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  height: 44px;\r\n}\r\n.functionBtn div {\r\n  width: 25%;\r\n}\r\n\r\n.recommend_content {\r\n  width: 100%;\r\n  height: calc(100% - 88px);\r\n  overflow: hidden;\r\n}\r\n#Mbox {\r\n  height: 100%;\r\n}\r\n.homeNav {\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n}\r\n.navBtn {\r\n  width: 14vw;\r\n  height: 14vw;\r\n  padding: 0;\r\n  margin: 10px 0 20px 0;\r\n  position: relative;\r\n}\r\n.navBtn > img {\r\n  width: 60%;\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 5px #fff;\r\n  padding: 6px;\r\n}\r\n.nowDate {\r\n  position: absolute;\r\n  top: 56px;\r\n  color: rgb(56, 56, 56);\r\n  font-size: 12px;\r\n}\r\n.ccccc {\r\n  margin: 0 0 4px 4px;\r\n}\r\n/* background-image: linear-gradient(120deg, #ff5a4c 0%, #ff1d11 100%); */\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/home1.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\",style:({ background: _vm.$store.state.zColor }),attrs:{\"id\":\"Mbox\"}},[_c('div',{ref:\"Mbox\",staticClass:\"recommend_content\"},[_c('div',{staticClass:\"recommend-cont\"},[_c('div',{staticClass:\"hoom1box\"},[_c('div',{staticClass:\"swiperBg\",style:({ background: _vm.$store.state.zColor })}),_vm._v(\" \"),(_vm.dataList)?_c('swiper',{attrs:{\"options\":_vm.swiperOption}},[_vm._l((_vm.dataList),function(item,index){return _c('swiper-slide',{key:index},[_c('img',{staticClass:\"lunbo\",attrs:{\"src\":item.imageUrl}})])}),_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination\",attrs:{\"slot\":\"pagination\"},slot:\"pagination\"})],2):_c('swiper',{attrs:{\"options\":_vm.swiperOption}},[_vm._l((_vm.newSongList),function(item,index){return _c('swiper-slide',{key:index},[_c('img',{staticClass:\"lunbo bannerImg\",attrs:{\"src\":item.album.blurPicUrl}})])}),_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination\",attrs:{\"slot\":\"pagination\"},slot:\"pagination\"})],2)],1),_vm._v(\" \"),_c('div',{staticClass:\"m-body\"},[_vm._m(0),_vm._v(\" \"),_vm._l((_vm.recommendList),function(item,index){return _c('div',{key:index,staticClass:\"cellMusic\",attrs:{\"id\":item.id},on:{\"click\":function($event){return _vm.openSongList(item.id)}}},[_c('img',{staticClass:\"mImg\",attrs:{\"src\":item.picUrl}}),_vm._v(\" \"),_c('div',{staticClass:\"mImg-bg-icon\",staticStyle:{\"top\":\"4px\"}},[_c('i',{staticClass:\"fa fa-headphones\"}),_vm._v(\"\\n            \"+_vm._s(Math.round(item.playCount / 10000))+\"万\\n          \")]),_vm._v(\" \"),_c('div',{staticClass:\"mName\"},[_vm._v(_vm._s(item.name))])])})],2)])]),_vm._v(\" \"),_c('musicList',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.songCont),expression:\"songCont\"}],key:_vm.songCont,ref:\"mySong\",attrs:{\"song\":_vm.songCont},on:{\"playSong\":_vm.playSong}})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a',{staticClass:\"m-title\",attrs:{\"href\":\"\"}},[_vm._v(\"推荐歌单\"),_c('i',{staticClass:\"fa fa-angle-right\"})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-55bc5772\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/home1.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"./\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-55bc5772\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./home1.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./home1.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./home1.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-55bc5772\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./home1.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-55bc5772\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/home1.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}